////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//using Serilog;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using MagicVilla_VillaAPI.Logging;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// use serilog for logging
//Log.Logger=new LoggerConfiguration()
//    .MinimumLevel.Debug()
//    .WriteTo.File("log/villaLogs.txt",rollingInterval: RollingInterval.Day)
//    .CreateLogger();
//builder.Host.UseSerilog();
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

builder.Services
.AddControllers(options =>
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // if no json, will return 406 
    //options.ReturnHttpNotAcceptable = true; 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////

})
.AddNewtonsoftJson()
.AddXmlDataContractSerializerFormatters(); // can return xml format when request header is set to application/xml

// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// customer logger
// it will create it when the project start
// only one instance will be created
builder.Services.AddSingleton<ILogging, LoggingV2>();
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var app = builder.Build();

// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseHttpsRedirection();

app.UseAuthorization();

app.MapControllers();

app.Run();
